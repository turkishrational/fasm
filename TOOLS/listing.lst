                                                                ; -----------------------------------------------------------
                                                                ; LISTING.PRG - FLAT Assembler Listing for TRDOS 386 (v2.0.9)
                                                                ; Erdogan Tan - 2024
                                                                ; Beginning: 08/10/2024
                                                                ; Last Update: 09/10/2024
                                                                ; -----------------------------------------------------------
                                                                ; Modified from 'tools/libc/listing.asm' file of
                                                                ; 'flat assembler 1.73.32 for Linux' source code
                                                                ; 2024
                                                                
                                                                	;format	ELF
                                                                	;public	main
                                                                
                                                                	format	binary
                                                                
                                                                ;include 'ccall.inc'
                                                                
                                                                ;section '.text' executable align 16
                                                                
                                                                	use32
                                                                	org 0x0
                                                                
                                                                  main:
00000000: BB 0B 2D 00 00                                        	mov	ebx, bss_end
00000005: B8 11 00 00 00                                        	mov	eax, 17 ; sysbreak
0000000A: CD 40                                                 	int	40h
                                                                	;;;
                                                                
                                                                	;mov	ecx,[esp+4]
0000000C: 8B 0C 24                                              	mov	ecx,[esp]
                                                                	;mov	[argc],ecx
                                                                	;mov	ebx,[esp+8]
0000000F: 8D 5C 24 04                                           	lea	ebx,[esp+4]
                                                                	;mov	[argv],ebx
                                                                
                                                                	;mov	[display_handle],1
                                                                
00000013: E8 42 00 00 00                                        	call	get_params
00000018: 73 16                                                 	jnc	make_listing
                                                                
0000001A: BE F8 0A 00 00                                        	mov	esi,_usage
0000001F: E8 4B 01 00 00                                        	call	display_string
                                                                	;ccall	exit,2
00000024: B8 01 00 00 00                                        	mov	eax,1 ; sysexit
00000029: BB 02 00 00 00                                        	mov	ebx,2
0000002E: CD 40                                                 	int	40h
                                                                
                                                                  make_listing:
00000030: E8 D7 01 00 00                                        	call	listing
                                                                   error_@:
                                                                	;ccall	exit,0
00000035: B8 01 00 00 00                                        	mov	eax,1 ; sysexit
                                                                	;mov	ebx,0
0000003A: 29 DB                                                 	sub	ebx,ebx
0000003C: CD 40                                                 	int	40h
                                                                
                                                                  error:
                                                                	;mov	[display_handle],2
0000003E: BE C3 0B 00 00                                        	mov	esi,_error_prefix
00000043: E8 27 01 00 00                                        	call	display_string
00000048: 5E                                                    	pop	esi
00000049: E8 21 01 00 00                                        	call	display_string
0000004E: BE CB 0B 00 00                                        	mov	esi,_error_suffix
00000053: E8 17 01 00 00                                        	call	display_string
                                                                	;;ccall	exit,0
                                                                	;mov	eax,1 ; sysexit
                                                                	;;mov	ebx,0
                                                                	;xor	ebx,ebx
                                                                	;int	40h
00000058: EB DB                                                 	jmp	error_@
                                                                
                                                                  get_params:
                                                                	;mov	ecx,[argc]
                                                                	;mov	ebx,[argv]
0000005A: 83 C3 04                                              	add	ebx,4
0000005D: 49                                                    	dec	ecx
0000005E: 74 3C                                                 	jz	bad_params
                                                                      get_param:
00000060: 8B 33                                                 	mov	esi,[ebx]
00000062: 8A 06                                                 	mov	al,[esi]
00000064: 3C 2D                                                 	cmp	al,'-'
00000066: 74 22                                                 	je	option_param
00000068: 83 3D E9 0A 00 00 00                                  	cmp	[input_file],0
0000006F: 75 08                                                 	jne	get_output_file
00000071: 89 35 E9 0A 00 00                                     	mov	[input_file],esi
00000077: EB 57                                                 	jmp	next_param
                                                                      get_output_file:
00000079: 83 3D ED 0A 00 00 00                                  	cmp	[output_file],0
00000080: 75 1A                                                 	jne	bad_params
00000082: 89 35 ED 0A 00 00                                     	mov	[output_file],esi
00000088: EB 46                                                 	jmp	next_param
                                                                      option_param:
0000008A: 46                                                    	inc	esi
0000008B: AC                                                    	lodsb
0000008C: 3C 61                                                 	cmp	al,'a'
0000008E: 74 0E                                                 	je	addresses_option
00000090: 3C 41                                                 	cmp	al,'A'
00000092: 74 0A                                                 	je	addresses_option
00000094: 3C 62                                                 	cmp	al,'b'
00000096: 74 14                                                 	je	bytes_per_line_option
00000098: 3C 42                                                 	cmp	al,'B'
0000009A: 74 10                                                 	je	bytes_per_line_option
                                                                      bad_params:
0000009C: F9                                                    	stc
0000009D: C3                                                    	ret
                                                                      addresses_option:
0000009E: 80 3E 00                                              	cmp	byte [esi],0
000000A1: 75 F9                                                 	jne	bad_params
000000A3: C6 05 F5 0A 00 00 01                                  	mov	[show_addresses],1
000000AA: EB 24                                                 	jmp	next_param
                                                                      bytes_per_line_option:
000000AC: 80 3E 00                                              	cmp	byte [esi],0
000000AF: 75 08                                                 	jne	get_bytes_per_line_setting
000000B1: 49                                                    	dec	ecx
000000B2: 74 E8                                                 	jz	bad_params
000000B4: 83 C3 04                                              	add	ebx,4
000000B7: 8B 33                                                 	mov	esi,[ebx]
                                                                      get_bytes_per_line_setting:
000000B9: E8 2B 00 00 00                                        	call	get_option_value
000000BE: 09 D2                                                 	or	edx,edx
000000C0: 74 DA                                                 	jz	bad_params
000000C2: 81 FA E8 03 00 00                                     	cmp	edx,1000
000000C8: 77 D2                                                 	ja	bad_params
000000CA: 89 15 F1 0A 00 00                                     	mov	[code_bytes_per_line],edx
                                                                      next_param:
000000D0: 83 C3 04                                              	add	ebx,4
000000D3: 49                                                    	dec	ecx
000000D4: 75 8A                                                 	jnz	get_param
000000D6: 83 3D E9 0A 00 00 00                                  	cmp	[input_file],0
000000DD: 74 BD                                                 	je	bad_params
000000DF: 83 3D ED 0A 00 00 00                                  	cmp	[output_file],0
000000E6: 74 B4                                                 	je	bad_params
                                                                	;clc
000000E8: C3                                                    	ret
                                                                      get_option_value:
000000E9: 31 C0                                                 	xor	eax,eax
000000EB: 89 C2                                                 	mov	edx,eax
                                                                      get_option_digit:
000000ED: AC                                                    	lodsb
000000EE: 3C 20                                                 	cmp	al,20h
000000F0: 74 1B                                                 	je	option_value_ok
000000F2: 3C 0D                                                 	cmp	al,0Dh
000000F4: 74 17                                                 	je	option_value_ok
000000F6: 08 C0                                                 	or	al,al
000000F8: 74 13                                                 	jz	option_value_ok
000000FA: 2C 30                                                 	sub	al,30h
000000FC: 72 12                                                 	jc	invalid_option_value2
000000FE: 3C 09                                                 	cmp	al,9
00000100: 77 0D                                                 	ja	invalid_option_value
00000102: 6B D2 0A                                              	imul	edx,10
00000105: 70 08                                                 	jo	invalid_option_value
00000107: 01 C2                                                 	add	edx,eax
00000109: 72 05                                                 	jc	invalid_option_value2
0000010B: EB E0                                                 	jmp	get_option_digit
                                                                      option_value_ok:
0000010D: 4E                                                    	dec	esi
                                                                	;clc
0000010E: C3                                                    	ret
                                                                      invalid_option_value:
0000010F: F9                                                    	stc
                                                                      invalid_option_value2:
00000110: C3                                                    	ret
                                                                
                                                                  include 'system.inc'
                                                                ; -----------------------------------------------------------
                                                                ; LISTING.PRG - FLAT Assembler Listing for TRDOS 386 (v2.0.9)
                                                                ; Erdogan Tan - 2024
                                                                ; Beginning: 08/10/2024
                                                                ; Last Update: 09/10/2024
                                                                ; -----------------------------------------------------------
                                                                ; Modified from 'tools/libc/system.inc' file of
                                                                ; 'flat assembler 1.73.32 for Linux' source code
                                                                ; 2024
                                                                
                                                                ;extrn malloc
                                                                ;extrn getenv
                                                                ;extrn fopen
                                                                ;extrn fclose
                                                                ;extrn fread
                                                                ;extrn fwrite
                                                                ;extrn fseek
                                                                ;extrn ftell
                                                                ;extrn time
                                                                ;extrn exit
                                                                ;extrn 'free' as libc_free
                                                                ;extrn 'write' as libc_write
                                                                
                                                                alloc:
                                                                	;ccall	malloc,eax
00000111: 53 50                                                 	push	ebx eax
                                                                	;sys _break,-1  ; get u.break address
00000113: BB FF FF FF FF                                        	mov	ebx,-1
00000118: B8 11 00 00 00                                        	mov	eax,17	; sysbreak
0000011D: CD 40                                                 	int	40h
0000011F: 5B                                                    	pop 	ebx  ; allocation size
00000120: 72 20                                                   	jc	malloc_error
                                                                
                                                                	;;;
                                                                	; ! (not necessary) !
                                                                	;sysalloc ; allocate (contiguous) memory pages
00000122: 51                                                    	push	ecx
00000123: 53                                                    	push	ebx
00000124: 50                                                    	push	eax
00000125: 93                                                    	xchg	eax,ebx
                                                                	; ebx = current [u.break]
                                                                	;     = start (virtual) addr to be allocated 
00000126: 89 C1                                                 	mov	ecx,eax ; allocation byte count
00000128: B8 2A 00 00 00                                        	mov	eax,42  ; sysalloc
0000012D: CD 40                                                 	int	40h
                                                                	; result not important !
                                                                	; (TRDOS 386 kernel will allocate memory pages
                                                                	; to this program/process when a write access
                                                                	; to an unallocated page causes a page fault.)
                                                                	; (Demand Paging principle.)
0000012F: 58                                                    	pop	eax
00000130: 5B                                                    	pop	ebx
00000131: 59                                                    	pop	ecx
                                                                	;;;
                                                                
                                                                	; eax = [u.break]
00000132: 83 C0 03                                              	add 	eax,3
00000135: 24 FC                                                 	and	al,not 3
00000137: 50                                                    	push	eax
00000138: 01 C3                                                 	add	ebx,eax
                                                                	; ebx = new [u.break]
                                                                	;sys _break
0000013A: B8 11 00 00 00                                        	mov	eax,17	; sysbreak
0000013F: CD 40                                                 	int	40h
00000141: 58                                                    	pop	eax
                                                                	;jc	malloc_error
                                                                	;test	eax,eax
                                                                	;jz	allocation_failed
                                                                	;clc
                                                                	;ret
                                                                      ;allocation_failed:
                                                                	;stc
                                                                	;ret
                                                                      malloc_error:
00000142: 5B                                                    	pop	ebx
00000143: C3                                                    	ret
                                                                free:
                                                                	;ccall	libc_free,eax
00000144: 53 50                                                 	push	ebx eax
                                                                	;sys _break,-1	; get u.break address
00000146: BB FF FF FF FF                                        	mov	ebx,-1
0000014B: B8 11 00 00 00                                        	mov	eax,17	; sysbreak
00000150: CD 40                                                 	int	40h
00000152: 5B                                                    	pop 	ebx  ; old [u.break]
00000153: 72 ED                                                   	jc	malloc_error
                                                                	; eax = current [u.break]
                                                                
00000155: 39 D8                                                 	cmp	eax, ebx
00000157: 76 14                                                 	jna	short already_free ; nothing to do
                                                                
                                                                	;;;
                                                                	; ! (not necessary) !
                                                                	;sysdalloc ; deallocate user's memory pages
00000159: 51                                                    	push	ecx
0000015A: 89 C1                                                 	mov	ecx,eax
0000015C: 29 D9                                                 	sub	ecx,ebx ; deallocation byte count
                                                                	; ebx = virtual (start) addr to be deallocated
0000015E: B8 2B 00 00 00                                        	mov	eax,43  ; sysdalloc
00000163: CD 40                                                 	int	40h
                                                                	; result not important !
                                                                	; (TRDOS 386 kernel will deallocate this
                                                                	; program's mem pages when this program/process
                                                                	; is terminated.)
00000165: 59                                                    	pop	ecx
                                                                	;;;
                                                                
                                                                	;sys _break
                                                                	; ebx = new [u.break] 
00000166: B8 11 00 00 00                                        	mov	eax,17 ; sysbreak
0000016B: CD 40                                                 	int	0x40
                                                                
                                                                      already_free:
0000016D: 5B                                                    	pop	ebx
                                                                      string_displayed:
0000016E: C3                                                    	ret
                                                                
                                                                display_string:
0000016F: AC                                                    	lodsb
00000170: 08 C0                                                 	or	al,al
00000172: 74 FA                                                 	jz	string_displayed
                                                                	;mov	dl,al
00000174: E8 02 00 00 00                                        	call	display_character
00000179: EB F4                                                 	jmp	display_string
                                                                      ;string_displayed:
                                                                	;ret
                                                                    display_character:
                                                                	;mov	[character],dl
                                                                	;ccall	libc_write,[display_handle],character,1
                                                                	;mov	cl,dl
0000017B: 88 C1                                                 	mov	cl,al
0000017D: BB 02 00 00 00                                        	mov	ebx,2	; STDOUT
00000182: B8 2E 00 00 00                                        	mov	eax,46  ; sysstdio
00000187: CD 40                                                 	int	40h
00000189: C3                                                    	ret
                                                                open:
0000018A: B8 05 00 00 00                                        	mov	eax,5	; sysopen
                                                                open_create_@:
                                                                	;push	esi edi ebp
0000018F: 56 57                                                 	push	esi edi
00000191: 50                                                    	push	eax
00000192: E8 11 00 00 00                                        	call	adapt_path
                                                                	;ccall	fopen,buffer,open_mode
                                                                	;mov	eax,5	; sysopen
00000197: 58                                                    	pop	eax
00000198: BB 0B 1D 00 00                                        	mov	ebx,buffer
0000019D: 29 C9                                                 	sub	ecx,ecx ; open for read
0000019F: CD 40                                                 	int	40h
                                                                	;pop	ebp edi esi
000001A1: 5F 5E                                                 	pop	edi esi
                                                                	;or	eax,eax
                                                                	;jz	file_error
000001A3: 72 22                                                 	jc	file_error
000001A5: 89 C3                                                 	mov	ebx,eax
                                                                	;clc
000001A7: C3                                                     	ret
                                                                    adapt_path:
000001A8: 89 D6                                                 	mov	esi,edx
000001AA: BF 0B 1D 00 00                                        	mov	edi,buffer
                                                                      copy_path:
000001AF: AC                                                    	lods	byte [esi]
000001B0: 3C 5C                                                 	cmp	al,'\'
000001B2: 75 02                                                 	jne	path_char_ok
000001B4: B0 2F                                                 	mov	al,'/'
                                                                      path_char_ok:
000001B6: AA                                                    	stos	byte [edi]
000001B7: 08 C0                                                 	or	al,al
000001B9: 75 F4                                                 	jnz	copy_path
000001BB: 81 FF 0B 2D 00 00                                     	cmp	edi,buffer+1000h
000001C1: 0F 87 C8 06 00 00                                     	ja	not_enough_memory
                                                                    file_error:
000001C7: C3                                                    	ret
                                                                create:
000001C8: B8 08 00 00 00                                        	mov	eax,8	; syscreat
000001CD: EB C0                                                 	jmp	open_create_@
                                                                	;;push	esi edi ebp
                                                                	;push	esi edi
                                                                	;call	adapt_path
                                                                	;ccall	fopen,buffer,create_mode
                                                                	;mov	eax,8	; syscreat
                                                                	;mov	ebx,buffer
                                                                	;xor	ecx,ecx ; ordinary file
                                                                	;int	40h
                                                                	;;pop	ebp edi esi
                                                                	;pop	edi esi
                                                                	;;or	eax,eax
                                                                	;;jz	file_error
                                                                	;jc	file_error
                                                                	;mov	ebx,eax
                                                                	;;clc
                                                                	;ret
                                                                close:
                                                                	;ccall	fclose,ebx
                                                                	; ebx = file handle
000001CF: B8 06 00 00 00                                        	mov	eax,6	; sysclose
000001D4: CD 40                                                 	int	40h
000001D6: C3                                                    	ret
                                                                read:
                                                                	;push	ebx ecx edx esi edi
000001D7: 51 52                                                 	push	ecx edx
                                                                	;ccall	fread,edx,1,ecx,ebx
                                                                	; edx = buffer
                                                                	; ecx = byte count
                                                                	; ebx = file handle
000001D9: B8 03 00 00 00                                        	mov	eax,3	; sysread
000001DE: 87 CA                                                 	xchg	ecx,edx
000001E0: CD 40                                                 	int	40h
                                                                	;pop	edi esi edx ecx ebx
000001E2: 5A 59                                                 	pop	edx ecx
000001E4: 72 E1                                                 	jc	file_error
000001E6: 39 C8                                                 	cmp	eax,ecx
                                                                	;jne	file_error ; eax < ecx
                                                                	;;clc
                                                                	;ret
                                                                    ;file_error:
                                                                	;stc
000001E8: C3                                                    	ret
                                                                write:
                                                                	;push	ebx ecx edx esi edi
000001E9: 51 52                                                 	push	ecx edx
                                                                	;ccall	fwrite,edx,1,ecx,ebx
                                                                	; edx = buffer
                                                                	; ecx = byte count
                                                                	; ebx = file handle
000001EB: B8 04 00 00 00                                        	mov	eax,4	; syswrite
000001F0: 87 CA                                                 	xchg	ecx,edx
000001F2: CD 40                                                 	int	40h
                                                                	;pop	edi esi edx ecx ebx
000001F4: 5A 59                                                 	pop	edx ecx
000001F6: 39 C8                                                 	cmp	eax,ecx
                                                                	;jne	file_error ; eax < ecx
                                                                	;clc
000001F8: C3                                                    	ret
                                                                lseek:
                                                                	;push	ebx
000001F9: 0F B6 C0                                              	movzx	eax,al
                                                                	;ccall	fseek,ebx,edx,eax
000001FC: 89 D1                                                 	mov	ecx,edx
000001FE: 89 C2                                                 	mov	edx,eax
                                                                	;mov	eax,19
00000200: B0 13                                                 	mov	al,19	; sysseek
00000202: CD 40                                                 	int	40h
                                                                	;mov	ebx,[esp]
                                                                	;ccall	ftell,ebx
00000204: B8 14 00 00 00                                        	mov	eax,20	; systell
00000209: CD 40                                                 	int	40h
                                                                	;pop	ebx
0000020B: C3                                                    	ret
                                                                
                                                                ;open_mode db 'r',0
                                                                ;create_mode db 'w',0
                                                                
                                                                
                                                                  include '..\listing.inc'
                                                                
                                                                listing:
0000020C: 8B 15 E9 0A 00 00                                     	mov	edx,[input_file]
00000212: E8 73 FF FF FF                                        	call	open
00000217: 0F 82 A3 06 00 00                                     	jc	input_not_found
0000021D: E8 FD 05 00 00                                        	call	load_file
00000222: A3 CF 0B 00 00                                        	mov	[input],eax
00000227: 83 F9 38                                              	cmp	ecx,38h
0000022A: 0F 82 6A 07 00 00                                     	jb	invalid_input
00000230: 81 38 66 61 73 1A                                     	cmp	dword [eax],1A736166h
00000236: 0F 85 5E 07 00 00                                     	jne	invalid_input
0000023C: 83 78 2C 00                                           	cmp	dword [eax+44],0
00000240: 0F 84 94 07 00 00                                     	je	incomplete_input
00000246: 01 40 10                                              	add	[eax+16],eax
00000249: 01 40 18                                              	add	[eax+24],eax
0000024C: 01 40 20                                              	add	[eax+32],eax
0000024F: 01 40 28                                              	add	[eax+40],eax
00000252: 01 40 30                                              	add	[eax+48],eax
00000255: 8B 50 10                                              	mov	edx,[eax+16]
00000258: 01 50 08                                              	add	[eax+8],edx
0000025B: 01 50 0C                                              	add	[eax+12],edx
0000025E: 8B 50 0C                                              	mov	edx,[eax+12]
00000261: E8 24 FF FF FF                                        	call	open
00000266: 0F 82 76 06 00 00                                     	jc	code_not_found
0000026C: E8 AE 05 00 00                                        	call	load_file
00000271: A3 D3 0B 00 00                                        	mov	[assembled_code],eax
00000276: 89 0D D7 0B 00 00                                     	mov	[assembled_code_length],ecx
0000027C: E8 4E FF FF FF                                        	call	close
00000281: C7 05 FF 0B 00 00 00 00 00 00                         	mov	[maximum_address_length],0
0000028B: 8B 1D CF 0B 00 00                                     	mov	ebx,[input]
00000291: 8B 73 28                                              	mov	esi,[ebx+40]
00000294: 8D 6E FC                                              	lea	ebp,[esi-4]
00000297: 03 6B 2C                                              	add	ebp,[ebx+44]
                                                                    get_offsets_for_lines:
0000029A: 39 EE                                                 	cmp	esi,ebp
0000029C: 0F 84 84 00 00 00                                     	je	offsets_prepared
000002A2: 8B 56 04                                              	mov	edx,[esi+4]
000002A5: 03 53 20                                              	add	edx,[ebx+32]
                                                                      find_line_loaded_from_source:
000002A8: F6 42 07 80                                           	test	byte [edx+7],1 shl 7
000002AC: 74 08                                                 	jz	store_offset_in_line
000002AE: 8B 52 08                                              	mov	edx,[edx+8]
000002B1: 03 53 20                                              	add	edx,[ebx+32]
000002B4: EB F2                                                 	jmp	find_line_loaded_from_source
                                                                      store_offset_in_line:
000002B6: 83 7A 0C 00                                           	cmp	dword [edx+12],0
000002BA: 75 62                                                 	jne	get_next_offset
000002BC: 89 72 0C                                              	mov	[edx+12],esi
000002BF: 0F B6 4E 1B                                           	movzx	ecx,byte [esi+27]
000002C3: 80 E1 01                                              	and	cl,1
000002C6: 8B 7E 14                                              	mov	edi,[esi+20]
000002C9: 85 FF                                                 	test	edi,edi
000002CB: 74 23                                                 	jz	base_name_length_ok
000002CD: 31 C9                                                 	xor	ecx,ecx
000002CF: 0F BA F7 1F                                           	btr	edi,31
000002D3: 72 09                                                 	jc	count_base_name_characters
000002D5: 4F                                                    	dec	edi
000002D6: C1 E7 02                                              	shl	edi,2
000002D9: 03 7B 30                                              	add	edi,[ebx+48]
000002DC: 8B 3F                                                 	mov	edi,[edi]
                                                                      count_base_name_characters:
000002DE: 8B 4B 14                                              	mov	ecx,[ebx+20]
000002E1: 29 F9                                                 	sub	ecx,edi
000002E3: 03 7B 10                                              	add	edi,[ebx+16]
000002E6: 89 FA                                                 	mov	edx,edi
000002E8: 30 C0                                                 	xor	al,al
000002EA: F2 AE                                                 	repne	scasb
000002EC: 89 F9                                                 	mov	ecx,edi
000002EE: 29 D1                                                 	sub	ecx,edx
                                                                      base_name_length_ok:
000002F0: 80 7E 12 01                                           	cmp	byte [esi+18],1
000002F4: 72 0A                                                 	jb	first_register_length_ok
000002F6: 77 05                                                 	ja	first_register_with_scale
000002F8: 83 C1 05                                              	add	ecx,5
000002FB: EB 03                                                 	jmp	first_register_length_ok
                                                                      first_register_with_scale:
000002FD: 83 C1 08                                              	add	ecx,5+3
                                                                      first_register_length_ok:
00000300: 80 7E 13 01                                           	cmp	byte [esi+19],1
00000304: 72 0A                                                 	jb	second_register_length_ok
00000306: 77 05                                                 	ja	second_register_with_scale
00000308: 83 C1 05                                              	add	ecx,5
0000030B: EB 03                                                 	jmp	second_register_length_ok
                                                                      second_register_with_scale:
0000030D: 83 C1 08                                              	add	ecx,5+3
                                                                      second_register_length_ok:
00000310: 3B 0D FF 0B 00 00                                     	cmp	ecx,[maximum_address_length]
00000316: 72 06                                                 	jb	get_next_offset
00000318: 89 0D FF 0B 00 00                                     	mov	[maximum_address_length],ecx
                                                                      get_next_offset:
0000031E: 83 C6 1C                                              	add	esi,28
00000321: E9 74 FF FF FF                                        	jmp	get_offsets_for_lines
                                                                    offsets_prepared:
00000326: 8B 06                                                 	mov	eax,[esi]
00000328: A3 DB 0B 00 00                                        	mov	[code_end],eax
0000032D: 83 05 FF 0B 00 00 13                                  	add	[maximum_address_length],19
00000334: BF 0B 1C 00 00                                        	mov	edi,characters
00000339: 30 C0                                                 	xor	al,al
                                                                      make_characters_table:
0000033B: AA                                                    	stosb
0000033C: FE C0                                                 	inc	al
0000033E: 75 FB                                                 	jnz	make_characters_table
00000340: BF 0B 1C 00 00                                        	mov	edi,characters
00000345: BE 0D 0A 00 00                                        	mov	esi,symbol_characters+1
0000034A: 0F B6 4E FF                                           	movzx	ecx,byte [esi-1]
0000034E: 31 C0                                                 	xor	eax,eax
                                                                      mark_symbol_characters:
00000350: AC                                                    	lodsb
00000351: C6 04 07 00                                           	mov	byte [edi+eax],0
00000355: E2 F9                                                 	loop	mark_symbol_characters
00000357: A1 F1 0A 00 00                                        	mov	eax,[code_bytes_per_line]
0000035C: 6B C0 03                                              	imul	eax,3
0000035F: 03 05 FF 0B 00 00                                     	add	eax,[maximum_address_length]
00000365: 83 C0 12                                              	add	eax,18
00000368: E8 A4 FD FF FF                                        	call	alloc
0000036D: 0F 82 1C 05 00 00                                     	jc	not_enough_memory
00000373: A3 EB 0B 00 00                                        	mov	[output_buffer],eax
00000378: 8B 73 20                                              	mov	esi,[ebx+32]
0000037B: 89 F5                                                 	mov	ebp,esi
0000037D: 03 6B 24                                              	add	ebp,[ebx+36]
00000380: 8B 15 ED 0A 00 00                                     	mov	edx,[output_file]
00000386: E8 3D FE FF FF                                        	call	create
0000038B: 0F 82 D6 05 00 00                                     	jc	writing_error
00000391: 89 1D E7 0B 00 00                                     	mov	[output_handle],ebx
00000397: 31 C0                                                 	xor	eax,eax
00000399: A3 EF 0B 00 00                                        	mov	[current_source_file],eax
0000039E: A3 07 0C 00 00                                        	mov	[last_listed_address],eax
000003A3: A3 E3 0B 00 00                                        	mov	[code_length],eax
                                                                    generate_listing:
000003A8: 39 EE                                                 	cmp	esi,ebp
000003AA: 0F 83 63 04 00 00                                     	jae	listing_done
000003B0: 8B 3D EB 0B 00 00                                     	mov	edi,[output_buffer]
000003B6: F6 46 07 80                                           	test	byte [esi+7],1 shl 7
000003BA: 0F 85 4B 01 00 00                                     	jnz	next_line
000003C0: 8B 5E 0C                                              	mov	ebx,[esi+12]
000003C3: 85 DB                                                 	test	ebx,ebx
000003C5: 74 7A                                                 	jz	no_code_listing
000003C7: F6 43 1A 03                                           	test	byte [ebx+26],11b
000003CB: 75 74                                                 	jnz	no_code_listing
000003CD: 56                                                    	push	esi
000003CE: 8B 16                                                 	mov	edx,[esi]
000003D0: 8B 4E 04                                              	mov	ecx,[esi+4]
                                                                     find_next_code_point:
000003D3: 83 C6 10                                              	add	esi,16
000003D6: E8 95 04 00 00                                        	call	skip_preprocessed_line
000003DB: 39 EE                                                 	cmp	esi,ebp
000003DD: 74 20                                                 	je	last_code_point
000003DF: 3B 16                                                 	cmp	edx,[esi]
000003E1: 75 05                                                 	jne	next_line_ok
000003E3: 3B 4E 04                                              	cmp	ecx,[esi+4]
000003E6: 74 EB                                                 	je	find_next_code_point
                                                                     next_line_ok:
000003E8: F6 46 07 80                                           	test	byte [esi+7],1 shl 7
000003EC: 75 E5                                                 	jnz	find_next_code_point
000003EE: 8B 46 0C                                              	mov	eax,[esi+12]
000003F1: 85 C0                                                 	test	eax,eax
000003F3: 74 DE                                                 	jz	find_next_code_point
000003F5: F6 40 1A 03                                           	test	byte [eax+26],11b
000003F9: 75 D8                                                 	jnz	find_next_code_point
000003FB: 8B 00                                                 	mov	eax,[eax]
000003FD: EB 05                                                 	jmp	calculate_code_length
                                                                     last_code_point:
000003FF: A1 DB 0B 00 00                                        	mov	eax,[code_end]
                                                                     calculate_code_length:
00000404: 5E                                                    	pop	esi
00000405: 8B 13                                                 	mov	edx,[ebx]
00000407: 29 D0                                                 	sub	eax,edx
00000409: 74 36                                                 	jz	no_code_listing
0000040B: A3 E3 0B 00 00                                        	mov	[code_length],eax
00000410: 89 15 DF 0B 00 00                                     	mov	[code_offset],edx
00000416: 01 D0                                                 	add	eax,edx
00000418: 3B 05 D7 0B 00 00                                     	cmp	eax,[assembled_code_length]
0000041E: 76 0A                                                 	jbe	write_file_offset
00000420: C7 05 E3 0B 00 00 00 00 00 00                         	mov	[code_length],0
                                                                      write_file_offset:
0000042A: E8 2A 04 00 00                                        	call	write_hex_dword
0000042F: 66 B8 3A 20                                           	mov	ax,': '
00000433: 66 AB                                                 	stosw
00000435: E8 F1 00 00 00                                        	call	list_address
0000043A: E8 30 02 00 00                                        	call	list_code
0000043F: EB 1B                                                 	jmp	code_listing_ok
                                                                      no_code_listing:
00000441: B0 20                                                 	mov	al,20h
00000443: B9 0A 00 00 00                                        	mov	ecx,8+2
00000448: F3 AA                                                 	rep	stosb
0000044A: E8 DC 00 00 00                                        	call	list_address
0000044F: 8B 0D F1 0A 00 00                                     	mov	ecx,[code_bytes_per_line]
00000455: 6B C9 03                                              	imul	ecx,3
00000458: B0 20                                                 	mov	al,20h
0000045A: F3 AA                                                 	rep	stosb
                                                                      code_listing_ok:
0000045C: E8 6B 02 00 00                                        	call	write_listing_data
00000461: A1 CF 0B 00 00                                        	mov	eax,[input]
00000466: 8B 16                                                 	mov	edx,[esi]
00000468: 85 D2                                                 	test	edx,edx
0000046A: 74 05                                                 	jz	main_source_file
0000046C: 03 50 20                                              	add	edx,[eax+32]
0000046F: EB 03                                                 	jmp	source_name_ok
                                                                      main_source_file:
00000471: 8B 50 08                                              	mov	edx,[eax+8]
                                                                      source_name_ok:
00000474: 3B 15 EF 0B 00 00                                     	cmp	edx,[current_source_file]
0000047A: 74 38                                                 	je	source_loaded
0000047C: 53                                                    	push	ebx
0000047D: 52                                                    	push	edx
0000047E: E8 07 FD FF FF                                        	call	open
00000483: 0F 82 7F 04 00 00                                     	jc	source_not_found
00000489: 58                                                    	pop	eax
0000048A: 87 05 EF 0B 00 00                                     	xchg	eax,[current_source_file]
00000490: 85 C0                                                 	test	eax,eax
00000492: 74 0A                                                 	jz	load_source
00000494: A1 F7 0B 00 00                                        	mov	eax,[source]
00000499: E8 A6 FC FF FF                                        	call	free
                                                                      load_source:
0000049E: E8 7C 03 00 00                                        	call	load_file
000004A3: A3 F7 0B 00 00                                        	mov	[source],eax
000004A8: 89 0D FB 0B 00 00                                     	mov	[source_length],ecx
000004AE: E8 1C FD FF FF                                        	call	close
000004B3: 5B                                                    	pop	ebx
                                                                      source_loaded:
000004B4: A1 F7 0B 00 00                                        	mov	eax,[source]
000004B9: 03 46 08                                              	add	eax,[esi+8]
000004BC: A3 F3 0B 00 00                                        	mov	[current_source_line],eax
000004C1: 56 55                                                 	push	esi ebp
000004C3: E8 2F 02 00 00                                        	call	write_source_line
000004C8: 5D 5E                                                 	pop	ebp esi
                                                                      write_supplemental_rows:
000004CA: A1 E3 0B 00 00                                        	mov	eax,[code_length]
000004CF: 0B 05 F3 0B 00 00                                     	or	eax,[current_source_line]
000004D5: 74 34                                                 	jz	next_line
000004D7: 8B 3D EB 0B 00 00                                     	mov	edi,[output_buffer]
000004DD: B9 0A 00 00 00                                        	mov	ecx,8+2
000004E2: 0F B6 05 F5 0A 00 00                                  	movzx	eax,[show_addresses]
000004E9: 0F AF 05 FF 0B 00 00                                  	imul	eax,[maximum_address_length]
000004F0: 01 C1                                                 	add	ecx,eax
000004F2: B0 20                                                 	mov	al,20h
000004F4: F3 AA                                                 	rep	stosb
000004F6: E8 74 01 00 00                                        	call	list_code
000004FB: E8 CC 01 00 00                                        	call	write_listing_data
00000500: 56 55                                                 	push	esi ebp
00000502: E8 F0 01 00 00                                        	call	write_source_line
00000507: 5D 5E                                                 	pop	ebp esi
00000509: EB BF                                                 	jmp	write_supplemental_rows
                                                                      next_line:
0000050B: 8B 16                                                 	mov	edx,[esi]
0000050D: 8B 4E 04                                              	mov	ecx,[esi+4]
                                                                      find_next_line:
00000510: 83 C6 10                                              	add	esi,16
00000513: E8 58 03 00 00                                        	call	skip_preprocessed_line
00000518: 3B 16                                                 	cmp	edx,[esi]
0000051A: 0F 85 88 FE FF FF                                     	jne	generate_listing
00000520: 3B 4E 04                                              	cmp	ecx,[esi+4]
00000523: 0F 85 7F FE FF FF                                     	jne	generate_listing
00000529: EB E5                                                 	jmp	find_next_line
                                                                    list_address:
0000052B: 80 3D F5 0A 00 00 00                                  	cmp	[show_addresses],0
00000532: 0F 84 E3 00 00 00                                     	je	address_ok
00000538: 89 3D 03 0C 00 00                                     	mov	[address_start],edi
0000053E: 8B 46 0C                                              	mov	eax,[esi+12]
00000541: 85 C0                                                 	test	eax,eax
00000543: 0F 84 C0 00 00 00                                     	jz	address_finished
00000549: 83 3D 07 0C 00 00 00                                  	cmp	[last_listed_address],0
00000550: 74 1A                                                 	je	make_address
00000552: 56 57                                                 	push	esi edi
00000554: 8D 70 08                                              	lea	esi,[eax+8]
00000557: 8B 3D 07 0C 00 00                                     	mov	edi,[last_listed_address]
0000055D: B9 11 00 00 00                                        	mov	ecx,17
00000562: F3 A6                                                 	repe	cmpsb
00000564: 5F 5E                                                 	pop	edi esi
00000566: 0F 84 9D 00 00 00                                     	je	address_finished
                                                                      make_address:
0000056C: 8B 5E 0C                                              	mov	ebx,[esi+12]
0000056F: 8D 43 08                                              	lea	eax,[ebx+8]
00000572: A3 07 0C 00 00                                        	mov	[last_listed_address],eax
00000577: B0 5B                                                 	mov	al,'['
00000579: AA                                                    	stosb
0000057A: 8B 53 14                                              	mov	edx,[ebx+20]
0000057D: 85 D2                                                 	test	edx,edx
0000057F: 74 36                                                 	jz	write_main_address
00000581: 56                                                    	push	esi
00000582: 89 D6                                                 	mov	esi,edx
00000584: A1 CF 0B 00 00                                        	mov	eax,[input]
00000589: 0F BA F6 1F                                           	btr	esi,31
0000058D: 72 09                                                 	jc	base_name_ready
0000058F: 4E                                                    	dec	esi
00000590: C1 E6 02                                              	shl	esi,2
00000593: 03 70 30                                              	add	esi,[eax+48]
00000596: 8B 36                                                 	mov	esi,[esi]
                                                                      base_name_ready:
00000598: 03 70 10                                              	add	esi,[eax+16]
                                                                      copy_section_name:
0000059B: AC                                                    	lodsb
0000059C: 84 C0                                                 	test	al,al
0000059E: 74 03                                                 	jz	section_name_ok
000005A0: AA                                                    	stosb
000005A1: EB F8                                                 	jmp	copy_section_name
                                                                      section_name_ok:
000005A3: 5E                                                    	pop	esi
000005A4: B0 3A                                                 	mov	al,':'
000005A6: F7 C2 00 00 00 80                                     	test	edx,80000000h
000005AC: 74 08                                                 	jz	address_separator_ok
000005AE: 80 7B 1B 00                                           	cmp	byte [ebx+27],0
000005B2: 75 02                                                 	jne	address_separator_ok
000005B4: B0 2B                                                 	mov	al,'+'
                                                                      address_separator_ok:
000005B6: AA                                                    	stosb
                                                                      write_main_address:
000005B7: 80 7B 1B 00                                           	cmp	byte [ebx+27],0
000005BB: 75 12                                                 	jne	write_negative_address
000005BD: 8B 53 0C                                              	mov	edx,[ebx+8+4]
000005C0: E8 94 02 00 00                                        	call	write_hex_dword
000005C5: 8B 53 08                                              	mov	edx,[ebx+8]
000005C8: E8 8C 02 00 00                                        	call	write_hex_dword
000005CD: EB 1F                                                 	jmp	write_address_registers
                                                                      write_negative_address:
000005CF: B0 2D                                                 	mov	al,'-'
000005D1: AA                                                    	stosb
000005D2: 8B 43 08                                              	mov	eax,[ebx+8]
000005D5: 8B 53 0C                                              	mov	edx,[ebx+8+4]
000005D8: F7 D0                                                 	not	eax
000005DA: F7 D2                                                 	not	edx
000005DC: 83 C0 01                                              	add	eax,1
000005DF: 83 D2 00                                              	adc	edx,0
000005E2: 50                                                    	push	eax
000005E3: E8 71 02 00 00                                        	call	write_hex_dword
000005E8: 5A                                                    	pop	edx
000005E9: E8 6B 02 00 00                                        	call	write_hex_dword
                                                                      write_address_registers:
000005EE: 8A 53 10                                              	mov	dl,[ebx+16]
000005F1: 8A 73 12                                              	mov	dh,[ebx+18]
000005F4: E8 23 00 00 00                                        	call	address_register
000005F9: 8A 53 11                                              	mov	dl,[ebx+17]
000005FC: 8A 73 13                                              	mov	dh,[ebx+19]
000005FF: E8 18 00 00 00                                        	call	address_register
00000604: 66 B8 5D 00                                           	mov	ax,']'
00000608: AA                                                    	stosb
                                                                      address_finished:
00000609: 8B 0D FF 0B 00 00                                     	mov	ecx,[maximum_address_length]
0000060F: 29 F9                                                 	sub	ecx,edi
00000611: 03 0D 03 0C 00 00                                     	add	ecx,[address_start]
00000617: B0 20                                                 	mov	al,20h
00000619: F3 AA                                                 	rep	stosb
                                                                      address_ok:
0000061B: C3                                                    	ret
                                                                      address_register:
0000061C: 80 FE 00                                              	cmp	dh,0
0000061F: 74 4D                                                 	je	register_ok
00000621: 7C 04                                                 	jl	negative_register
00000623: B0 2B                                                 	mov	al,'+'
00000625: EB 02                                                 	jmp	register_sign_ok
                                                                      negative_register:
00000627: B0 2D                                                 	mov	al,'-'
                                                                      register_sign_ok:
00000629: AA                                                    	stosb
0000062A: 56                                                    	push	esi
0000062B: BE 28 0A 00 00                                        	mov	esi,address_registers
                                                                      find_register:
00000630: AC                                                    	lodsb
00000631: 84 C0                                                 	test	al,al
00000633: 74 10                                                 	jz	register_found
00000635: 38 D0                                                 	cmp	al,dl
00000637: 74 0C                                                 	je	register_found
00000639: 3A 16                                                 	cmp	dl,[esi]
0000063B: 74 08                                                 	je	register_found
0000063D: AC                                                    	lodsb
0000063E: 0F B6 C0                                              	movzx	eax,al
00000641: 01 C6                                                 	add	esi,eax
00000643: EB EB                                                 	jmp	find_register
                                                                      register_found:
00000645: AC                                                    	lodsb
00000646: 0F B6 C8                                              	movzx	ecx,al
00000649: F3 A4                                                 	rep	movsb
0000064B: 5E                                                    	pop	esi
0000064C: 80 FE 01                                              	cmp	dh,1
0000064F: 74 1D                                                 	je	register_ok
00000651: B0 2A                                                 	mov	al,'*'
00000653: AA                                                    	stosb
00000654: F6 C6 F0                                              	test	dh,0F0h
00000657: 74 0B                                                 	jz	first_scale_digit_ok
00000659: 88 F0                                                 	mov	al,dh
0000065B: C0 E8 04                                              	shr	al,4
0000065E: 3C 0A                                                 	cmp	al,10
00000660: 1C 69                                                 	sbb	al,69h
00000662: 2F                                                    	das
00000663: AA                                                    	stosb
                                                                      first_scale_digit_ok:
00000664: 88 F0                                                 	mov	al,dh
00000666: 24 0F                                                 	and	al,1111b
00000668: 3C 0A                                                 	cmp	al,10
0000066A: 1C 69                                                 	sbb	al,69h
0000066C: 2F                                                    	das
0000066D: AA                                                    	stosb
                                                                      register_ok:
0000066E: C3                                                    	ret
                                                                    list_code:
0000066F: 8B 0D E3 0B 00 00                                     	mov	ecx,[code_length]
00000675: 3B 0D F1 0A 00 00                                     	cmp	ecx,[code_bytes_per_line]
0000067B: 72 06                                                 	jb	code_bytes_count_ready
0000067D: 8B 0D F1 0A 00 00                                     	mov	ecx,[code_bytes_per_line]
                                                                      code_bytes_count_ready:
00000683: 29 0D E3 0B 00 00                                     	sub	[code_length],ecx
00000689: 8B 15 DF 0B 00 00                                     	mov	edx,[code_offset]
0000068F: 01 0D DF 0B 00 00                                     	add	[code_offset],ecx
00000695: E3 25                                                 	jecxz	code_bytes_ok
00000697: 51                                                    	push	ecx
00000698: 03 15 D3 0B 00 00                                     	add	edx,[assembled_code]
                                                                      list_code_bytes:
0000069E: 8A 02                                                 	mov	al,[edx]
000006A0: 24 0F                                                 	and	al,1111b
000006A2: 3C 0A                                                 	cmp	al,10
000006A4: 1C 69                                                 	sbb	al,69h
000006A6: 2F                                                    	das
000006A7: 88 C4                                                 	mov	ah,al
000006A9: 8A 02                                                 	mov	al,[edx]
000006AB: C0 E8 04                                              	shr	al,4
000006AE: 3C 0A                                                 	cmp	al,10
000006B0: 1C 69                                                 	sbb	al,69h
000006B2: 2F                                                    	das
000006B3: 66 AB                                                 	stosw
000006B5: B0 20                                                 	mov	al,20h
000006B7: AA                                                    	stosb
000006B8: 42                                                    	inc	edx
000006B9: E2 E3                                                 	loop	list_code_bytes
000006BB: 59                                                    	pop	ecx
                                                                      code_bytes_ok:
000006BC: F7 D9                                                 	neg	ecx
000006BE: 03 0D F1 0A 00 00                                     	add	ecx,[code_bytes_per_line]
000006C4: 6B C9 03                                              	imul	ecx,3
000006C7: B0 20                                                 	mov	al,20h
000006C9: F3 AA                                                 	rep	stosb
000006CB: C3                                                    	ret
                                                                    write_listing_data:
000006CC: 8B 0D EB 0B 00 00                                     	mov	ecx,[output_buffer]
000006D2: 29 F9                                                 	sub	ecx,edi
000006D4: 83 E1 07                                              	and	ecx,111b
000006D7: B0 20                                                 	mov	al,20h
000006D9: F3 AA                                                 	rep	stosb
000006DB: 8B 15 EB 0B 00 00                                     	mov	edx,[output_buffer]
000006E1: 89 F9                                                 	mov	ecx,edi
000006E3: 29 D1                                                 	sub	ecx,edx
000006E5: 8B 1D E7 0B 00 00                                     	mov	ebx,[output_handle]
000006EB: E8 F9 FA FF FF                                        	call	write
000006F0: 0F 82 71 02 00 00                                     	jc	writing_error
000006F6: C3                                                    	ret
                                                                    write_source_line:
000006F7: 8B 35 F3 0B 00 00                                     	mov	esi,[current_source_line]
000006FD: 85 F6                                                 	test	esi,esi
000006FF: 0F 84 EE 00 00 00                                     	je	write_line_break
00000705: 8B 2D FB 0B 00 00                                     	mov	ebp,[source_length]
0000070B: 03 2D F7 0B 00 00                                     	add	ebp,[source]
00000711: BB 0B 1C 00 00                                        	mov	ebx,characters
00000716: 30 C9                                                 	xor	cl,cl
                                                                      start_cutting:
00000718: 30 D2                                                 	xor	dl,dl
                                                                      cut_source_line:
0000071A: 39 EE                                                 	cmp	esi,ebp
0000071C: 0F 84 AD 00 00 00                                     	je	end_of_file
00000722: AC                                                    	lodsb
00000723: 3C 0D                                                 	cmp	al,0Dh
00000725: 74 6C                                                 	je	cr_character
00000727: 3C 0A                                                 	cmp	al,0Ah
00000729: 0F 84 81 00 00 00                                     	je	lf_character
0000072F: 3C 1A                                                 	cmp	al,1Ah
00000731: 0F 84 97 00 00 00                                     	je	end_of_line
00000737: 08 C0                                                 	or	al,al
00000739: 0F 84 8F 00 00 00                                     	jz	end_of_line
0000073F: 80 FA 3B                                              	cmp	dl,3Bh
00000742: 74 D6                                                 	je	cut_source_line
00000744: 3C 3B                                                 	cmp	al,3Bh
00000746: 74 24                                                 	je	start_special_block
00000748: 80 FA 22                                              	cmp	dl,22h
0000074B: 74 23                                                 	je	inside_string
0000074D: 80 FA 27                                              	cmp	dl,27h
00000750: 74 1E                                                 	je	inside_string
00000752: 3C 5C                                                 	cmp	al,'\'
00000754: 74 20                                                 	je	check_for_line_continuation
00000756: D7                                                    	xlatb
00000757: 84 C0                                                 	test	al,al
00000759: 74 BD                                                 	jz	start_cutting
0000075B: 80 FA FF                                              	cmp	dl,0FFh
0000075E: 74 BA                                                 	je	cut_source_line
00000760: 3C 22                                                 	cmp	al,22h
00000762: 74 08                                                 	je	start_special_block
00000764: 3C 27                                                 	cmp	al,27h
00000766: 74 04                                                 	je	start_special_block
00000768: B2 FF                                                 	mov	dl,0FFh
0000076A: EB AE                                                 	jmp	cut_source_line
                                                                      start_special_block:
0000076C: 88 C2                                                 	mov	dl,al
0000076E: EB AA                                                 	jmp	cut_source_line
                                                                      inside_string:
00000770: 38 D0                                                 	cmp	al,dl
00000772: 75 A6                                                 	jne	cut_source_line
00000774: EB A2                                                 	jmp	start_cutting
                                                                      check_for_line_continuation:
00000776: 80 C9 FF                                              	or	cl,0FFh
00000779: 39 EE                                                 	cmp	esi,ebp
0000077B: 74 52                                                 	je	end_of_file
0000077D: 8A 06                                                 	mov	al,[esi]
0000077F: 3C 20                                                 	cmp	al,20h
00000781: 74 95                                                 	je	start_cutting
00000783: 3C 0D                                                 	cmp	al,0Dh
00000785: 74 91                                                 	je	start_cutting
00000787: 3C 0A                                                 	cmp	al,0Ah
00000789: 74 8D                                                 	je	start_cutting
0000078B: 3C 3B                                                 	cmp	al,3Bh
0000078D: 74 89                                                 	je	start_cutting
0000078F: 30 C9                                                 	xor	cl,cl
00000791: EB 85                                                 	jmp	start_cutting
                                                                      cr_character:
00000793: 89 F2                                                 	mov	edx,esi
00000795: 66 C7 05 F6 0A 00 00 0D 00                            	mov	word [line_break],0Dh
0000079E: 39 EE                                                 	cmp	esi,ebp
000007A0: 74 29                                                 	je	line_with_break
000007A2: 8A 06                                                 	mov	al,[esi]
000007A4: 3C 0A                                                 	cmp	al,0Ah
000007A6: 75 23                                                 	jne	line_with_break
000007A8: 42                                                    	inc	edx
000007A9: A2 F7 0A 00 00                                        	mov	[line_break+1],al
000007AE: EB 1B                                                 	jmp	line_with_break
                                                                      lf_character:
000007B0: 89 F2                                                 	mov	edx,esi
000007B2: 66 C7 05 F6 0A 00 00 0A 00                            	mov	word [line_break],0Ah
000007BB: 39 EE                                                 	cmp	esi,ebp
000007BD: 74 0C                                                 	je	line_with_break
000007BF: 8A 06                                                 	mov	al,[esi]
000007C1: 3C 0D                                                 	cmp	al,0Dh
000007C3: 75 06                                                 	jne	line_with_break
000007C5: 42                                                    	inc	edx
000007C6: A2 F7 0A 00 00                                        	mov	[line_break+1],al
                                                                      line_with_break:
000007CB: 4E                                                    	dec	esi
000007CC: EB 03                                                 	jmp	write_line
                                                                      end_of_line:
000007CE: 4E                                                    	dec	esi
                                                                      end_of_file:
000007CF: 89 F2                                                 	mov	edx,esi
                                                                      write_line:
000007D1: 80 F9 FF                                              	cmp	cl,0FFh
000007D4: 74 02                                                 	je	continued_line
000007D6: 31 D2                                                 	xor	edx,edx
                                                                      continued_line:
000007D8: 87 15 F3 0B 00 00                                     	xchg	edx,[current_source_line]
000007DE: 89 F1                                                 	mov	ecx,esi
000007E0: 29 D1                                                 	sub	ecx,edx
000007E2: 8B 1D E7 0B 00 00                                     	mov	ebx,[output_handle]
000007E8: E8 FC F9 FF FF                                        	call	write
000007ED: 0F 82 74 01 00 00                                     	jc	writing_error
                                                                      write_line_break:
000007F3: BA F6 0A 00 00                                        	mov	edx,line_break
000007F8: B9 02 00 00 00                                        	mov	ecx,2
000007FD: 80 3D F7 0A 00 00 00                                  	cmp	[line_break+1],0
00000804: 75 01                                                 	jne	line_break_size_ok
00000806: 49                                                    	dec	ecx
                                                                      line_break_size_ok:
00000807: E8 DD F9 FF FF                                        	call	write
0000080C: 0F 82 55 01 00 00                                     	jc	writing_error
00000812: C3                                                    	ret
                                                                    listing_done:
00000813: 8B 1D E7 0B 00 00                                     	mov	ebx,[output_handle]
00000819: E8 B1 F9 FF FF                                        	call	close
0000081E: C3                                                    	ret
                                                                
                                                                load_file:
0000081F: 53                                                    	push	ebx
00000820: B0 02                                                 	mov	al,2
00000822: 31 D2                                                 	xor	edx,edx
00000824: E8 D0 F9 FF FF                                        	call	lseek
00000829: 85 C0                                                 	test	eax,eax
0000082B: 74 28                                                 	jz	empty_file
0000082D: 50                                                    	push	eax
0000082E: E8 DE F8 FF FF                                        	call	alloc
00000833: 72 5A                                                 	jc	not_enough_memory
00000835: 50                                                    	push	eax
00000836: 30 C0                                                 	xor	al,al
00000838: 31 D2                                                 	xor	edx,edx
0000083A: E8 BA F9 FF FF                                        	call	lseek
0000083F: 8B 4C 24 04                                           	mov	ecx,[esp+4]
00000843: 8B 14 24                                              	mov	edx,[esp]
00000846: E8 8C F9 FF FF                                        	call	read
0000084B: 0F 82 E4 00 00 00                                     	jc	reading_error
00000851: 58 59                                                 	pop	eax ecx
00000853: 5B                                                    	pop	ebx
00000854: C3                                                    	ret
                                                                      empty_file:
00000855: 5B                                                    	pop	ebx
00000856: 89 C1                                                 	mov	ecx,eax
00000858: C3                                                    	ret
                                                                
                                                                write_hex_dword:
00000859: B9 08 00 00 00                                        	mov	ecx,8
                                                                      write_hex_digits:
0000085E: 30 C0                                                 	xor	al,al
00000860: 0F A4 D0 04                                           	shld	eax,edx,4
00000864: 3C 0A                                                 	cmp	al,10
00000866: 1C 69                                                 	sbb	al,69h
00000868: 2F                                                    	das
00000869: AA                                                    	stosb
0000086A: C1 E2 04                                              	shl	edx,4
0000086D: E2 EF                                                 	loop	write_hex_digits
0000086F: C3                                                    	ret
                                                                
                                                                skip_preprocessed_line:
00000870: AC                                                    	lods	byte [esi]
00000871: 3C 1A                                                 	cmp	al,1Ah
00000873: 74 0D                                                 	je	skip_preprocessed_symbol
00000875: 3C 3B                                                 	cmp	al,3Bh
00000877: 74 09                                                 	je	skip_preprocessed_symbol
00000879: 3C 22                                                 	cmp	al,22h
0000087B: 74 0D                                                 	je	skip_preprocessed_string
0000087D: 08 C0                                                 	or	al,al
0000087F: 75 EF                                                 	jnz	skip_preprocessed_line
00000881: C3                                                    	ret
                                                                      skip_preprocessed_symbol:
00000882: AC                                                    	lods	byte [esi]
00000883: 0F B6 C0                                              	movzx	eax,al
00000886: 01 C6                                                 	add	esi,eax
00000888: EB E6                                                 	jmp	skip_preprocessed_line
                                                                      skip_preprocessed_string:
0000088A: AD                                                    	lods	dword [esi]
0000088B: 01 C6                                                 	add	esi,eax
0000088D: EB E1                                                 	jmp	skip_preprocessed_line
                                                                
                                                                
                                                                not_enough_memory:
0000088F: E8 AA F7 FF FF                                        	call	error
00000894: 6E 6F 74 20 65 6E 6F 75 67 68 20 6D 65 6D 6F 72       	db	'not enough memory to load the required data',0
          79 20 74 6F 20 6C 6F 61 64 20 74 68 65 20 72 65       
          71 75 69 72 65 64 20 64 61 74 61 00                   
                                                                input_not_found:
000008C0: E8 79 F7 FF FF                                        	call	error
000008C5: 74 68 65 20 69 6E 70 75 74 20 66 69 6C 65 20 77       	db	'the input file was not found',0
          61 73 20 6E 6F 74 20 66 6F 75 6E 64 00                
                                                                code_not_found:
000008E2: E8 57 F7 FF FF                                        	call	error
000008E7: 74 68 65 20 61 73 73 65 6D 62 6C 65 64 20 66 69       	db	'the assembled file was not found',0
          6C 65 20 77 61 73 20 6E 6F 74 20 66 6F 75 6E 64       
          00                                                    
                                                                source_not_found:
00000908: E8 31 F7 FF FF                                        	call	error
0000090D: 63 6F 75 6C 64 20 6E 6F 74 20 66 69 6E 64 20 73       	db	'could not find some of the source files',0
          6F 6D 65 20 6F 66 20 74 68 65 20 73 6F 75 72 63       
          65 20 66 69 6C 65 73 00                               
                                                                reading_error:
00000935: E8 04 F7 FF FF                                        	call	error
0000093A: 73 6F 6D 65 20 65 72 72 6F 72 20 6F 63 63 75 72       	db	'some error occured while trying to read file',0
          65 64 20 77 68 69 6C 65 20 74 72 79 69 6E 67 20       
          74 6F 20 72 65 61 64 20 66 69 6C 65 00                
                                                                writing_error:
00000967: E8 D2 F6 FF FF                                        	call	error
0000096C: 73 6F 6D 65 20 65 72 72 6F 72 20 6F 63 63 75 72       	db	'some error occured while trying to write file',0
          65 64 20 77 68 69 6C 65 20 74 72 79 69 6E 67 20       
          74 6F 20 77 72 69 74 65 20 66 69 6C 65 00             
                                                                invalid_input:
0000099A: E8 9F F6 FF FF                                        	call	error
0000099F: 69 6E 70 75 74 20 66 69 6C 65 20 69 73 20 6E 6F       	db	'input file is not a recognized assembly information format',0
          74 20 61 20 72 65 63 6F 67 6E 69 7A 65 64 20 61       
          73 73 65 6D 62 6C 79 20 69 6E 66 6F 72 6D 61 74       
          69 6F 6E 20 66 6F 72 6D 61 74 00                      
                                                                incomplete_input:
000009DA: E8 5F F6 FF FF                                        	call	error
000009DF: 69 6E 70 75 74 20 66 69 6C 65 20 64 6F 65 73 20       	db	'input file does not contain an assembly dump',0
          6E 6F 74 20 63 6F 6E 74 61 69 6E 20 61 6E 20 61       
          73 73 65 6D 62 6C 79 20 64 75 6D 70 00                
                                                                
00000A0C: 1B 09 0A 0D 1A 20 2B 2D 2F 2A 3D 3C 3E 28 29 5B       symbol_characters db 27, 9,0Ah,0Dh,1Ah,20h,'+-/*=<>()[]{}:,|&~#`;\'
          5D 7B 7D 3A 2C 7C 26 7E 23 60 3B 5C                   
                                                                
00000A28: 23 02 62 78                                           address_registers db 23h,2,'bx'
00000A2C: 25 02 62 70                                           		  db 25h,2,'bp'
00000A30: 26 02 73 69                                           		  db 26h,2,'si'
00000A34: 27 02 64 69                                           		  db 27h,2,'di'
00000A38: 40 03 65 61 78                                        		  db 40h,3,'eax'
00000A3D: 41 03 65 63 78                                        		  db 41h,3,'ecx'
00000A42: 42 03 65 64 78                                        		  db 42h,3,'edx'
00000A47: 43 03 65 62 78                                        		  db 43h,3,'ebx'
00000A4C: 44 03 65 73 70                                        		  db 44h,3,'esp'
00000A51: 45 03 65 62 70                                        		  db 45h,3,'ebp'
00000A56: 46 03 65 73 69                                        		  db 46h,3,'esi'
00000A5B: 47 03 65 64 69                                        		  db 47h,3,'edi'
00000A60: 48 03 72 38 64                                        		  db 48h,3,'r8d'
00000A65: 49 03 72 39 64                                        		  db 49h,3,'r9d'
00000A6A: 4A 04 72 31 30 64                                     		  db 4Ah,4,'r10d'
00000A70: 4B 04 72 31 31 64                                     		  db 4Bh,4,'r11d'
00000A76: 4C 04 72 31 32 64                                     		  db 4Ch,4,'r12d'
00000A7C: 4D 04 72 31 33 64                                     		  db 4Dh,4,'r13d'
00000A82: 4E 04 72 31 34 64                                     		  db 4Eh,4,'r14d'
00000A88: 4F 04 72 31 35 64                                     		  db 4Fh,4,'r15d'
00000A8E: 80 03 72 61 78                                        		  db 80h,3,'rax'
00000A93: 81 03 72 63 78                                        		  db 81h,3,'rcx'
00000A98: 82 03 72 64 78                                        		  db 82h,3,'rdx'
00000A9D: 83 03 72 62 78                                        		  db 83h,3,'rbx'
00000AA2: 84 03 72 73 70                                        		  db 84h,3,'rsp'
00000AA7: 85 03 72 62 70                                        		  db 85h,3,'rbp'
00000AAC: 86 03 72 73 69                                        		  db 86h,3,'rsi'
00000AB1: 87 03 72 64 69                                        		  db 87h,3,'rdi'
00000AB6: 88 02 72 38                                           		  db 88h,2,'r8'
00000ABA: 89 02 72 39                                           		  db 89h,2,'r9'
00000ABE: 8A 03 72 31 30                                        		  db 8Ah,3,'r10'
00000AC3: 8B 03 72 31 31                                        		  db 8Bh,3,'r11'
00000AC8: 8C 03 72 31 32                                        		  db 8Ch,3,'r12'
00000ACD: 8D 03 72 31 33                                        		  db 8Dh,3,'r13'
00000AD2: 8E 03 72 31 34                                        		  db 8Eh,3,'r14'
00000AD7: 8F 03 72 31 35                                        		  db 8Fh,3,'r15'
00000ADC: F4 03 65 69 70                                        		  db 0F4h,3,'eip'
00000AE1: F8 03 72 69 70                                        		  db 0F8h,3,'rip'
00000AE6: 00 01 3F                                              		  db 0,1,'?'
                                                                
                                                                
                                                                ;section '.data' writeable align 4
                                                                
00000AE9: 00 00 00 00                                             input_file dd 0
00000AED: 00 00 00 00                                             output_file dd 0
00000AF1: 10 00 00 00                                             code_bytes_per_line dd 16
00000AF5: 00                                                      show_addresses db 0
                                                                
00000AF6: 0D 0A                                                   line_break db 0Dh,0Ah
                                                                
00000AF8: 6C 69 73 74 69 6E 67 20 67 65 6E 65 72 61 74 6F         _usage db 'listing generator for flat assembler',0Dh,0Ah
          72 20 66 6F 72 20 66 6C 61 74 20 61 73 73 65 6D       
          62 6C 65 72 0D 0A                                     
00000B1E: 75 73 61 67 65 3A 20 6C 69 73 74 69 6E 67 20 3C       	 db 'usage: listing <input> <output>',0Dh,0Ah
          69 6E 70 75 74 3E 20 3C 6F 75 74 70 75 74 3E 0D       
          0A                                                    
00000B3F: 6F 70 74 69 6F 6E 61 6C 20 73 65 74 74 69 6E 67       	 db 'optional settings:',0Dh,0Ah
          73 3A 0D 0A                                           
00000B53: 20 2D 61 20 20 20 20 20 20 20 20 20 20 20 73 68       	 db ' -a           show target addresses for assembled code',0Dh,0Ah
          6F 77 20 74 61 72 67 65 74 20 61 64 64 72 65 73       
          73 65 73 20 66 6F 72 20 61 73 73 65 6D 62 6C 65       
          64 20 63 6F 64 65 0D 0A                               
00000B8B: 20 2D 62 20 3C 6E 75 6D 62 65 72 3E 20 20 73 65       	 db ' -b <number>  set the amount of bytes listed per line',0Dh,0Ah
          74 20 74 68 65 20 61 6D 6F 75 6E 74 20 6F 66 20       
          62 79 74 65 73 20 6C 69 73 74 65 64 20 70 65 72       
          20 6C 69 6E 65 0D 0A                                  
00000BC2: 00                                                    	 db 0
00000BC3: 65 72 72 6F 72 3A 20 00                                 _error_prefix db 'error: ',0
00000BCB: 2E 0D 0A 00                                             _error_suffix db '.',0Dh,0Ah,0
                                                                
                                                                ;section '.bss' writeable align 4
                                                                
                                                                  ;argc rd 1
                                                                  ;argv rd 1
                                                                
                                                                  input rd 1
                                                                  assembled_code rd 1
                                                                  assembled_code_length rd 1
                                                                  code_end rd 1
                                                                  code_offset rd 1
                                                                  code_length rd 1
                                                                  output_handle rd 1
                                                                  output_buffer rd 1
                                                                  current_source_file rd 1
                                                                  current_source_line rd 1
                                                                  source rd 1
                                                                  source_length rd 1
                                                                  maximum_address_length rd 1
                                                                  address_start rd 1
                                                                  last_listed_address rd 1
                                                                
                                                                  ;display_handle rd 1
                                                                  ;character rb 1
                                                                
                                                                  params rb 1000h
                                                                  characters rb 100h
                                                                  buffer rb 1000h
                                                                
                                                                bss_end:
                                                                
